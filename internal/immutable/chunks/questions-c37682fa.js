import{d as y,w as B}from"./index-779a6bb2.js";import{o as v,w as b,a as I,q as z,g as O}from"./user-a6a30b9f.js";import{g as p,d as h,e as j,i as D}from"./quizzes-f93848c4.js";async function L(t){return await(await p()).getAllFromIndex("questions","user_id",t)}async function A(t,a,e,n){const d=await p(),u={...f(t,a,e),...n,uri:n.name?h(n.name):void 0},l=await d.put("questions",u);return{...u,local_id:l}}async function U(t,a,e,n,d){const u=await p(),l=await u.get("questions",n)||f(t,a,e),s={...l,...d,user_id:t,local_quiz_id:a,quiz_id:e,local_id:n,uri:d.name?h(d.name):l.uri,updated_at:new Date};return await u.put("questions",s,n),s}async function x(t,a,e,n,d){const u=await p(),s={...await u.get("questions",n)||f(t,a,e),...d,user_id:t,local_quiz_id:a,quiz_id:e,local_id:n};return await u.put("questions",s),s}async function m(t){await(await p()).delete("questions",t)}function f(t,a,e){return{id:0,local_quiz_id:a,local_deleted:0,quiz_id:e,user_id:t,name:"",uri:"",created_at:new Date,updated_at:new Date}}const Q=B({});y(Q,t=>Object.values(t));const k=y(Q,t=>Object.values(t).reduce((a,e)=>((a[e.local_quiz_id]||(a[e.local_quiz_id]=[])).push(e),a),{}));async function E(t,a){var n;const e=await D(t);if(e){const d=(n=O())==null?void 0:n.id;let u={};I()&&(u=await z.postApiQuizzesQuizIdQuestions({quizId:e.id,postApiQuizzesQuizIdQuestions:a}));const l=await A(d,e.local_id,e.id,{...a,...u});return Q.update(s=>({...s,[l.local_id]:l})),l}}async function g(t){const a=await j(),e=Object.values(a).reduce((s,c)=>(s[c.id]=c,s),{}),n=await L(t),d={},u={},l=[];for(const s of n)s.id===0?l.push(s):u[s.id]=s,s.local_deleted===0&&(d[s.local_id]=s);if(Q.update(s=>({...s,...d})),I()){const s=(await Promise.all(Object.keys(e).map(i=>z.getApiQuizzesQuizIdQuestions({quizId:parseInt(i)})))).flat(1),c={},q=new Set,_=[];for(const i of s){const o=u[i.id];if(o)o.updated_at>i.updated_at?o.local_deleted===1?_.push(z.deleteApiQuizzesQuizIdQuestionsId({quizId:i.quiz_id,id:i.id}).then(()=>m(o.local_id)).then(()=>{q.add(o.local_id)})):_.push(z.patchApiQuizzesQuizIdQuestionsId({quizId:i.quiz_id,id:i.id,patchApiQuizzesQuizIdQuestionsId:{...i,...o}}).then(r=>{c[o.id]={...o,...r}})):o.updated_at<i.updated_at?_.push(U(t,o.local_quiz_id,i.quiz_id,o.local_id,{...o,...i}).then(r=>{c[r.local_id]=r})):c[o.local_id]={...o,...i};else{const r=e[i.quiz_id];_.push(A(t,r.local_id,r.id,i).then(w=>{c[w.local_id]=w}))}}for(const i of l)_.push(z.postApiQuizzesQuizIdQuestions({quizId:i.quiz_id,postApiQuizzesQuizIdQuestions:i}).then(o=>x(t,i.local_quiz_id,i.quiz_id,i.local_id,o)).then(o=>{c[o.local_id]=o}));await Promise.all(_),await Promise.all(Object.values(u).map(async i=>{c[i.local_id]||(q.add(i.local_id),await m(i.local_id))})),Q.update(i=>{i={...i,...c};for(const o of q)delete i[o];return i})}}v.on("online",async()=>{const t=await b();g(t.id)});b().then(t=>g(t.id));export{E as c,k as q};
