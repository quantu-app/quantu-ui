import{d as w,w as O}from"./index-779a6bb2.js";import{o as j,w as I,a as y,b as Q,g as z}from"./user-2e20fb31.js";import{g as b,e as A,f as D,i as B}from"./quizzes-e994c03c.js";async function U(e){return await(await b()).getAllFromIndex("questions","user_id",e)}async function x(e){return await(await b()).get("questions",e)}async function g(e,i,a,n){const c=await b(),l={...q(e,i,a),...n,uri:n.name?A(n.name):void 0},u=await c.put("questions",l);return{...l,local_id:u}}async function v(e,i,a,n,c){const l=await b(),u=await l.get("questions",n)||q(e,i,a),s={...u,...c,user_id:e,local_learnable_resource:i,learnable_resource:a,local_id:n,uri:c.name?A(c.name):u.uri,updated_at:new Date};return await l.put("questions",s),s}async function F(e,i,a,n,c){const l=await b(),s={...await l.get("questions",n)||q(e,i,a),...c,user_id:e,local_learnable_resource:i,learnable_resource:a,local_id:n};return await l.put("questions",s),s}async function h(e){await(await b()).delete("questions",e)}function q(e,i,a){return{id:0,local_learnable_resource:i,local_deleted:0,learnable_resource:a,user_id:e,name:"",uri:"",created_at:new Date,updated_at:new Date}}const _=O({});w(_,e=>Object.values(e));const k=w(_,e=>e),E=w(_,e=>Object.values(e).reduce((i,a)=>((i[a.local_learnable_resource]||(i[a.local_learnable_resource]=[])).push(a),i),{}));async function C(e,i){var n;const a=await B(e);if(a){const c=(n=z())==null?void 0:n.id;let l={};y()&&(l=await Q.postApiQuestions({quizId:a.id,postApiQuestions:i}));const u=await g(c,a.local_id,a.id,{...i,...l});return _.update(s=>({...s,[u.local_id]:u})),u}}async function R(e,i,a){var c;const n=await B(e);if(n){const l=await x(i);if(l){const u=(c=z())==null?void 0:c.id;let s={};y()&&(s=await Q.patchApiQuestionsId({quizId:n.id,id:l.id,patchApiQuestionsId:a}));const d=await v(u,n.local_id,n.id,i,{...l,...s});return _.update(f=>({...f,[d.local_id]:d})),d}}}async function L(e){const i=await D(),a=Object.values(i).reduce((s,d)=>(s[d.id]=d,s),{}),n=await U(e),c={},l={},u=[];for(const s of n)s.id===0?u.push(s):l[s.id]=s,s.local_deleted===0&&(c[s.local_id]=s);if(_.update(s=>({...s,...c})),y()){const s=(await Promise.all(Object.keys(a).map(t=>Q.getApiQuestions({quizId:parseInt(t)})))).flat(1),d={},f=new Set,p=[];for(const t of s){const o=l[t.id];if(o)o.updated_at>t.updated_at?o.local_deleted===1?p.push(Q.deleteApiQuestionsId({quizId:t.learnable_resource,id:t.id}).then(()=>h(o.local_id)).then(()=>{f.add(o.local_id)})):p.push(Q.patchApiQuestionsId({quizId:t.learnable_resource,id:t.id,patchApiQuestionsId:{...t,...o}}).then(r=>{d[o.id]={...o,...r}})):o.updated_at<t.updated_at?p.push(v(e,o.local_learnable_resource,t.learnable_resource,o.local_id,{...o,...t}).then(r=>{d[r.local_id]=r})):d[o.local_id]={...o,...t};else{const r=a[t.learnable_resource];p.push(g(e,r.local_id,r.id,t).then(m=>{d[m.local_id]=m}))}}for(const t of u)p.push(Q.postApiQuestions({quizId:t.learnable_resource,postApiQuestions:t}).then(o=>F(e,t.local_learnable_resource,t.learnable_resource,t.local_id,o)).then(o=>{d[o.local_id]=o}));await Promise.all(p),await Promise.all(Object.values(l).map(async t=>{d[t.local_id]||(f.add(t.local_id),await h(t.local_id))})),_.update(t=>{t={...t,...d};for(const o of f)delete t[o];return t})}}j.on("online",async()=>{const e=await I();L(e.id)});I().then(e=>L(e.id));export{k as a,C as c,E as q,R as u};
