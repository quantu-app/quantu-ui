/* tslint:disable */
/* eslint-disable */
/**
 * QuantU Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MercuryEntitiesQuestion } from './MercuryEntitiesQuestion';
import {
    MercuryEntitiesQuestionFromJSON,
    MercuryEntitiesQuestionFromJSONTyped,
    MercuryEntitiesQuestionToJSON,
} from './MercuryEntitiesQuestion';

/**
 * Mercury_Entities_MovedQuestion model
 * @export
 * @interface MercuryEntitiesMovedQuestion
 */
export interface MercuryEntitiesMovedQuestion {
    /**
     * 
     * @type {MercuryEntitiesQuestion}
     * @memberof MercuryEntitiesMovedQuestion
     */
    moved_question: MercuryEntitiesQuestion;
    /**
     * 
     * @type {Array<MercuryEntitiesQuestion>}
     * @memberof MercuryEntitiesMovedQuestion
     */
    other_questions: Array<MercuryEntitiesQuestion>;
}

/**
 * Check if a given object implements the MercuryEntitiesMovedQuestion interface.
 */
export function instanceOfMercuryEntitiesMovedQuestion(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "moved_question" in value;
    isInstance = isInstance && "other_questions" in value;

    return isInstance;
}

export function MercuryEntitiesMovedQuestionFromJSON(json: any): MercuryEntitiesMovedQuestion {
    return MercuryEntitiesMovedQuestionFromJSONTyped(json, false);
}

export function MercuryEntitiesMovedQuestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MercuryEntitiesMovedQuestion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'moved_question': MercuryEntitiesQuestionFromJSON(json['moved_question']),
        'other_questions': ((json['other_questions'] as Array<any>).map(MercuryEntitiesQuestionFromJSON)),
    };
}

export function MercuryEntitiesMovedQuestionToJSON(value?: MercuryEntitiesMovedQuestion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'moved_question': MercuryEntitiesQuestionToJSON(value.moved_question),
        'other_questions': ((value.other_questions as Array<any>).map(MercuryEntitiesQuestionToJSON)),
    };
}

