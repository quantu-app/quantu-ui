/* tslint:disable */
/* eslint-disable */
/**
 * QuantU Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Mercury_Entities_Question model
 * @export
 * @interface MercuryEntitiesQuestion
 */
export interface MercuryEntitiesQuestion {
    /**
     * 
     * @type {number}
     * @memberof MercuryEntitiesQuestion
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof MercuryEntitiesQuestion
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof MercuryEntitiesQuestion
     */
    uri: string;
    /**
     * 
     * @type {string}
     * @memberof MercuryEntitiesQuestion
     */
    question_type: string;
    /**
     * 
     * @type {number}
     * @memberof MercuryEntitiesQuestion
     */
    item_order: number;
    /**
     * 
     * @type {object}
     * @memberof MercuryEntitiesQuestion
     */
    data: object;
    /**
     * 
     * @type {Date}
     * @memberof MercuryEntitiesQuestion
     */
    created_at: Date;
    /**
     * 
     * @type {Date}
     * @memberof MercuryEntitiesQuestion
     */
    updated_at: Date;
}

/**
 * Check if a given object implements the MercuryEntitiesQuestion interface.
 */
export function instanceOfMercuryEntitiesQuestion(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "uri" in value;
    isInstance = isInstance && "question_type" in value;
    isInstance = isInstance && "item_order" in value;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "created_at" in value;
    isInstance = isInstance && "updated_at" in value;

    return isInstance;
}

export function MercuryEntitiesQuestionFromJSON(json: any): MercuryEntitiesQuestion {
    return MercuryEntitiesQuestionFromJSONTyped(json, false);
}

export function MercuryEntitiesQuestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MercuryEntitiesQuestion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'uri': json['uri'],
        'question_type': json['question_type'],
        'item_order': json['item_order'],
        'data': json['data'],
        'created_at': (new Date(json['created_at'])),
        'updated_at': (new Date(json['updated_at'])),
    };
}

export function MercuryEntitiesQuestionToJSON(value?: MercuryEntitiesQuestion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'uri': value.uri,
        'question_type': value.question_type,
        'item_order': value.item_order,
        'data': value.data,
        'created_at': (value.created_at.toISOString()),
        'updated_at': (value.updated_at.toISOString()),
    };
}

