/* tslint:disable */
/* eslint-disable */
/**
 * QuantU Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Create a new study session
 * @export
 * @interface PostApiStudySessions
 */
export interface PostApiStudySessions {
	/**
	 * Learnable ID
	 * @type {number}
	 * @memberof PostApiStudySessions
	 */
	learnable_id: number;
	/**
	 * Learnable Type
	 * @type {string}
	 * @memberof PostApiStudySessions
	 */
	learnable_type: PostApiStudySessionsLearnableTypeEnum;
	/**
	 *
	 * @type {object}
	 * @memberof PostApiStudySessions
	 */
	data?: object;
}

/**
 * @export
 */
export const PostApiStudySessionsLearnableTypeEnum = {
	Quiz: 'Quiz'
} as const;
export type PostApiStudySessionsLearnableTypeEnum =
	(typeof PostApiStudySessionsLearnableTypeEnum)[keyof typeof PostApiStudySessionsLearnableTypeEnum];

/**
 * Check if a given object implements the PostApiStudySessions interface.
 */
export function instanceOfPostApiStudySessions(value: object): boolean {
	let isInstance = true;
	isInstance = isInstance && 'learnable_id' in value;
	isInstance = isInstance && 'learnable_type' in value;

	return isInstance;
}

export function PostApiStudySessionsFromJSON(json: any): PostApiStudySessions {
	return PostApiStudySessionsFromJSONTyped(json, false);
}

export function PostApiStudySessionsFromJSONTyped(
	json: any,
	ignoreDiscriminator: boolean
): PostApiStudySessions {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		learnable_id: json['learnable_id'],
		learnable_type: json['learnable_type'],
		data: !exists(json, 'data') ? undefined : json['data']
	};
}

export function PostApiStudySessionsToJSON(value?: PostApiStudySessions | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		learnable_id: value.learnable_id,
		learnable_type: value.learnable_type,
		data: value.data
	};
}
