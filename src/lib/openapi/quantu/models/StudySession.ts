/* tslint:disable */
/* eslint-disable */
/**
 * QuantU Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * StudySession model
 * @export
 * @interface StudySession
 */
export interface StudySession {
    /**
     * Data
     * @type {object}
     * @memberof StudySession
     */
    data: object;
    /**
     * User Id
     * @type {number}
     * @memberof StudySession
     */
    user_id: number;
    /**
     * Type of learnable resource the Question belongs to
     * @type {string}
     * @memberof StudySession
     */
    learnable_resource_type: StudySessionLearnableResourceTypeEnum;
    /**
     * Learnable Resource Id
     * @type {number}
     * @memberof StudySession
     */
    learnable_resource_id: number;
    /**
     * 
     * @type {Date}
     * @memberof StudySession
     */
    created_at: Date;
    /**
     * 
     * @type {Date}
     * @memberof StudySession
     */
    updated_at: Date;
}


/**
 * @export
 */
export const StudySessionLearnableResourceTypeEnum = {
    Quiz: 'Quiz'
} as const;
export type StudySessionLearnableResourceTypeEnum = typeof StudySessionLearnableResourceTypeEnum[keyof typeof StudySessionLearnableResourceTypeEnum];


/**
 * Check if a given object implements the StudySession interface.
 */
export function instanceOfStudySession(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "user_id" in value;
    isInstance = isInstance && "learnable_resource_type" in value;
    isInstance = isInstance && "learnable_resource_id" in value;
    isInstance = isInstance && "created_at" in value;
    isInstance = isInstance && "updated_at" in value;

    return isInstance;
}

export function StudySessionFromJSON(json: any): StudySession {
    return StudySessionFromJSONTyped(json, false);
}

export function StudySessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudySession {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': json['data'],
        'user_id': json['user_id'],
        'learnable_resource_type': json['learnable_resource_type'],
        'learnable_resource_id': json['learnable_resource_id'],
        'created_at': (new Date(json['created_at'])),
        'updated_at': (new Date(json['updated_at'])),
    };
}

export function StudySessionToJSON(value?: StudySession | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data,
        'user_id': value.user_id,
        'learnable_resource_type': value.learnable_resource_type,
        'learnable_resource_id': value.learnable_resource_id,
        'created_at': (value.created_at.toISOString()),
        'updated_at': (value.updated_at.toISOString()),
    };
}

